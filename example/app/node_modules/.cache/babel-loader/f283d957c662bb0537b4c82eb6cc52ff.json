{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/adamzientarski/dev/ual-authenticator-walkthrough/example/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UALProvider = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _i18n = _interopRequireDefault(require(\"../../i18n\"));\n\nrequire(\"../../types\");\n\nvar _universalAuthenticatorLibrary = require(\"universal-authenticator-library\");\n\nvar _UALContext = require(\"./UALContext\");\n\nvar _provider = require(\"../../constants/provider\");\n\nvar _UALBox = require(\"../modal/UALBox\");\n\nvar _provider2 = require(\"../../styles/provider\");\n\nvar _base = require(\"../../styles/base\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n\n  if (obj != null) {\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar UALProvider = /*#__PURE__*/function (_Component) {\n  _inherits(UALProvider, _Component);\n\n  function UALProvider(props) {\n    var _this;\n\n    _classCallCheck(this, UALProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UALProvider).call(this, props));\n    /**\n     * @namespace UAL\n     */\n\n    _defineProperty(_assertThisInitialized(_this), \"getAuthenticatorInstance\", function (type, availableAuthenticators) {\n      var loggedIn = availableAuthenticators.filter(function (auth) {\n        return auth.constructor.name === type;\n      });\n\n      if (!loggedIn.length) {\n        _this.clearCache();\n      }\n\n      return loggedIn.length ? loggedIn[0] : false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchAuthenticators\", function (availableAuthenticators, autoLoginAuthenticator) {\n      var authenticateWithoutAccountInput = _this.state.authenticateWithoutAccountInput;\n\n      if (autoLoginAuthenticator) {\n        _this.setState({\n          availableAuthenticators: [autoLoginAuthenticator]\n        }, function () {\n          var availableCheck = setInterval(function () {\n            if (!autoLoginAuthenticator.isLoading()) {\n              clearInterval(availableCheck);\n              authenticateWithoutAccountInput(autoLoginAuthenticator, true);\n            }\n          }, 250);\n        });\n      } else {\n        _this.setState({\n          availableAuthenticators: availableAuthenticators\n        }, function () {\n          _this.setState({\n            message: _i18n[\"default\"].t('authenticatorsLoaded')\n          });\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearCache\", function () {\n      window.localStorage.removeItem('UALLoggedInAuthType');\n      window.localStorage.removeItem('UALAccountName');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fullLogout\", function (authenticator) {\n      _this.clearCache();\n\n      authenticator.logout()[\"catch\"](function (e) {\n        return console.warn(e);\n      });\n    });\n\n    _this.state = {\n      /**\n       * @memberof UAL\n       * @desc chain list from props\n       * @type {Chain[]} chains\n       */\n      chains: props.chains,\n\n      /**\n       * @memberof UAL\n       * @desc authenticator instances from props\n       * @type {Authenticator[]} authenticators\n       */\n      authenticators: props.authenticators,\n\n      /**\n       * @memberof UAL\n       * @desc available authenticator list\n       * @type {Authenticator[]} availableAuthenticators\n       */\n      availableAuthenticators: [],\n\n      /**\n       * @memberof UAL\n       * @desc name of app\n       * @type {string} appName\n       */\n      appName: props.appName,\n\n      /**\n       * @memberof UAL\n       * @desc whether or not show modal, initialized via props\n       * @type {boolean} modal\n       */\n      modal: props.modal,\n\n      /**\n       * @memberof UAL\n       * @desc loading state of UAL\n       * @type {boolean} loading\n       */\n      loading: false,\n\n      /**\n       * @memberof UAL\n       * @desc list of authenticated users\n       * @type {User[]} users\n       */\n      users: [],\n\n      /**\n       * @memberof UAL\n       * @desc authenticator currently used\n       * @type {Authenticator} activeAuthenticator\n       */\n      activeAuthenticator: null,\n\n      /**\n       * @memberof UAL\n       * @desc logged in user\n       * @type {User} activeUser\n       */\n      activeUser: null,\n\n      /**\n       * @memberof UAL\n       * @desc whether or not activeAuthenticator should auto login\n       * @type {boolean} isAutoLogin\n       */\n      isAutoLogin: false,\n\n      /**\n       * @memberof UAL\n       * @desc captured error if any\n       * @type {UALError|null} error\n       */\n      error: null,\n\n      /**\n       * @memberof UAL\n       * @desc message, if any, accompanying current UAL state\n       * @type {string} message\n       */\n      message: '',\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name hideModal\n       * @desc hides the modal\n       * @return {Void}\n       */\n      hideModal: function hideModal() {\n        return _this.setState({\n          modal: false,\n          loading: true,\n          message: _i18n[\"default\"].t('loadingAuthenticators')\n        });\n      },\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name showModal\n       * @desc shows the modal\n       * @return {Void}\n       */\n      showModal: function showModal() {\n        var availableAuthenticators = _this.state.availableAuthenticators;\n        availableAuthenticators.forEach(function (auth) {\n          return auth.reset();\n        });\n\n        _this.setState({\n          modal: true\n        });\n      },\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name logout\n       * @desc logs user out of authenticator and resets UAL state\n       * @return {Void}\n       */\n      logout: function logout() {\n        var activeAuthenticator = _this.state.activeAuthenticator;\n\n        _this.setState(_provider.DEFAULT_STATUS, function () {\n          return activeAuthenticator && _this.fullLogout(activeAuthenticator);\n        });\n      },\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name restart\n       * @desc resets all available authenticators and resets UAL state\n       * @return {Void}\n       */\n      restart: function restart() {\n        _this.setState({\n          DEFAULT_STATUS: _provider.DEFAULT_STATUS\n        }, function () {\n          var availableAuthenticators = _this.state.availableAuthenticators;\n          availableAuthenticators.forEach(function (auth) {\n            return auth.reset();\n          });\n\n          _this.setState(availableAuthenticators);\n        });\n      },\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name broadcastStatus\n       * @desc dispatches a provider state update\n       * @return {Void}\n       */\n      broadcastStatus: function broadcastStatus() {\n        var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _provider.DEFAULT_STATUS;\n        return _this.setState(status);\n      },\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name authenticateWithoutAccountInput\n       * @desc attempts authentication with an authenticator not requiring account input\n       * @return {Void}\n       * @param {Authenticator} authenticator\n       * @param {boolean} [false] isAutoLogin\n       */\n      authenticateWithoutAccountInput: function () {\n        var _authenticateWithoutAccountInput = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authenticator) {\n          var isAutoLogin,\n              broadcastStatus,\n              users,\n              accountName,\n              _args = arguments;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  isAutoLogin = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n                  broadcastStatus = _this.state.broadcastStatus;\n                  broadcastStatus({\n                    loading: true,\n                    message: _i18n[\"default\"].t('continueWithAuthenticator', {\n                      authenticatorName: authenticator.getStyle().text\n                    }),\n                    activeAuthenticator: authenticator\n                  });\n                  _context.prev = 3;\n                  _context.next = 6;\n                  return authenticator.login();\n\n                case 6:\n                  users = _context.sent;\n                  _context.next = 9;\n                  return users[0].getAccountName();\n\n                case 9:\n                  accountName = _context.sent;\n\n                  if (!isAutoLogin) {\n                    window.localStorage.setItem('UALLoggedInAuthType', authenticator.constructor.name);\n                  }\n\n                  broadcastStatus({\n                    activeUser: users[users.length - 1],\n                    users: users,\n                    isAutoLogin: isAutoLogin,\n                    message: _i18n[\"default\"].t('currentlyLoggedInAs', {\n                      accountName: accountName\n                    })\n                  });\n                  _context.next = 17;\n                  break;\n\n                case 14:\n                  _context.prev = 14;\n                  _context.t0 = _context[\"catch\"](3);\n                  broadcastStatus({\n                    loading: false,\n                    error: _context.t0,\n                    message: _context.t0.message\n                  });\n\n                case 17:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[3, 14]]);\n        }));\n\n        function authenticateWithoutAccountInput(_x) {\n          return _authenticateWithoutAccountInput.apply(this, arguments);\n        }\n\n        return authenticateWithoutAccountInput;\n      }(),\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name submitAccountForLogin\n       * @desc attempts authentication\n       * @return {Void}\n       * @param {string} accountInput\n       * @param {Authenticator} authenticator\n       */\n      submitAccountForLogin: function () {\n        var _submitAccountForLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(accountInput, authenticator) {\n          var broadcastStatus, authenticatorName, users;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  broadcastStatus = _this.state.broadcastStatus;\n                  authenticatorName = authenticator.constructor.name;\n                  broadcastStatus({\n                    loading: true,\n                    message: authenticator.requiresGetKeyConfirmation() ? _i18n[\"default\"].t('waitWhileFindAccountWithConfirmation') : _i18n[\"default\"].t('waitWhileFindAccount')\n                  });\n                  _context2.prev = 3;\n                  _context2.next = 6;\n                  return authenticator.login(accountInput);\n\n                case 6:\n                  users = _context2.sent;\n                  window.localStorage.setItem('UALLoggedInAuthType', authenticatorName);\n                  window.localStorage.setItem('UALAccountName', accountInput);\n                  broadcastStatus({\n                    activeUser: users[users.length - 1],\n                    activeAuthenticator: authenticator,\n                    users: users,\n                    message: _i18n[\"default\"].t('currentlyLoggedInAs', {\n                      accountName: accountInput\n                    })\n                  });\n                  _context2.next = 15;\n                  break;\n\n                case 12:\n                  _context2.prev = 12;\n                  _context2.t0 = _context2[\"catch\"](3);\n                  broadcastStatus({\n                    error: _context2.t0,\n                    message: _context2.t0.message,\n                    loading: false\n                  });\n\n                case 15:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[3, 12]]);\n        }));\n\n        function submitAccountForLogin(_x2, _x3) {\n          return _submitAccountForLogin.apply(this, arguments);\n        }\n\n        return submitAccountForLogin;\n      }()\n    };\n    return _this;\n  }\n\n  _createClass(UALProvider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$state = this.state,\n          chains = _this$state.chains,\n          appName = _this$state.appName,\n          authenticators = _this$state.authenticators,\n          authenticateWithoutAccountInput = _this$state.authenticateWithoutAccountInput,\n          submitAccountForLogin = _this$state.submitAccountForLogin;\n      var type = window.localStorage.getItem('UALLoggedInAuthType');\n      var accountName = window.localStorage.getItem('UALAccountName');\n      var ual = new _universalAuthenticatorLibrary.UAL(chains, appName, authenticators);\n\n      try {\n        var _ual$getAuthenticator = ual.getAuthenticators(),\n            availableAuthenticators = _ual$getAuthenticator.availableAuthenticators;\n\n        if (type) {\n          var authenticator = this.getAuthenticatorInstance(type, availableAuthenticators);\n\n          if (!authenticator) {\n            throw new Error('authenticator instance not found');\n          }\n\n          var availableCheck = setInterval(function () {\n            if (!authenticator.isLoading()) {\n              clearInterval(availableCheck); // Only Ledger requires an account name\n\n              if (accountName) {\n                submitAccountForLogin(accountName, authenticator);\n              } else {\n                authenticateWithoutAccountInput(authenticator);\n              }\n            }\n          }, 250);\n        }\n      } catch (e) {\n        this.clearCache();\n\n        var msg = _i18n[\"default\"].t('sessionEndedNeedLogin');\n\n        var source = type || 'Universal Authenticator Library';\n        var errType = _universalAuthenticatorLibrary.UALErrorType.Login;\n        console.warn(new _universalAuthenticatorLibrary.UALError(msg, errType, e, source));\n      } finally {\n        var _ual$getAuthenticator2 = ual.getAuthenticators(),\n            _availableAuthenticators = _ual$getAuthenticator2.availableAuthenticators,\n            autoLoginAuthenticator = _ual$getAuthenticator2.autoLoginAuthenticator;\n\n        this.fetchAuthenticators(_availableAuthenticators, autoLoginAuthenticator);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$state2 = this.state,\n          loading = _this$state2.loading,\n          message = _this$state2.message,\n          availableAuthenticators = _this$state2.availableAuthenticators,\n          broadcastStatus = _this$state2.broadcastStatus;\n\n      if (loading && message === _i18n[\"default\"].t('loadingAuthenticators') && availableAuthenticators.length) {\n        broadcastStatus({\n          message: _i18n[\"default\"].t('authenticatorsLoaded'),\n          loading: false\n        });\n      }\n    }\n    /**\n     * Verifies a logged in user's authenticator is still app supported\n     * @method\n     * @param {string} type - authenticator type of sessioned user\n     * @param {Object[]} availableAuthenticators - list of available app supported authenticators\n     * @return {number|boolean}\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var modal = this.state.modal && _react[\"default\"].createElement(\"div\", {\n        style: _provider2.modalStyles\n      }, _react[\"default\"].createElement(_UALBox.UALBox, null));\n\n      return _react[\"default\"].createElement(_UALContext.UALContext.Provider, {\n        value: this.state\n      }, _react[\"default\"].createElement(\"style\", null, _base.baseFont), modal, this.props.children);\n    }\n  }]);\n\n  return UALProvider;\n}(_react.Component);\n/**\n * @memberof UALProvider\n * @name props\n * @prop {Chain[]} chains - list of chains the app supports\n * @prop {Authenticator[]} authenticators - list of authenticators the app supports\n * @prop {Node[]|Node} children - child app(s)\n * @prop {string} appName - name of app\n * @prop {boolean} modal - whether or not to show modal\n */\n\n\nexports.UALProvider = UALProvider;\n\n_defineProperty(UALProvider, \"displayName\", 'UALProvider');\n\nUALProvider.propTypes = {\n  chains: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object).isRequired,\n  authenticators: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object).isRequired,\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node), _propTypes[\"default\"].node]).isRequired,\n  appName: _propTypes[\"default\"].string.isRequired,\n  modal: _propTypes[\"default\"].bool\n};\nUALProvider.defaultProps = {\n  modal: false\n};","map":null,"metadata":{},"sourceType":"script"}