{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.darkenColor = void 0;\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Code inspired by Chris Coyier's vanilla css lighten/darken color solution\n * https://css-tricks.com/snippets/javascript/lighten-darken-color/\n */\n\n\nvar hexToRGB = function hexToRGB(color) {\n  var num = parseInt(color.replace('#', ''), 16);\n  var r = (num >> 16) - 30; // eslint-disable-line\n\n  var b = (num >> 8 & 0x00FF) - 30; // eslint-disable-line\n\n  var g = (num & 0x0000FF) - 30; // eslint-disable-line\n\n  return [r, b, g];\n};\n\nvar limitValues = function limitValues(value) {\n  if (value > 255) return 255;\n  if (value < 0) return 0;\n  return value;\n};\n\nvar darkenColor = function darkenColor(color) {\n  var colors;\n\n  if (!color) {\n    return '#1A3270';\n  }\n\n  if (color.indexOf('rgb') !== -1) {\n    colors = color.replace('rgb(', '').replace(')', '').split(',').map(function (num) {\n      return parseInt(num, 10) - 30;\n    }).map(limitValues);\n  } else {\n    colors = hexToRGB(color).map(limitValues);\n  }\n\n  var _colors = colors,\n      _colors2 = _slicedToArray(_colors, 3),\n      r = _colors2[0],\n      g = _colors2[1],\n      b = _colors2[2];\n\n  return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n};\n\nexports.darkenColor = darkenColor;","map":null,"metadata":{},"sourceType":"script"}