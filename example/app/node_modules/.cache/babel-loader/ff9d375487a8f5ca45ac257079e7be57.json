{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/adamzientarski/dev/ual-authenticator-walkthrough/example/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/Users/adamzientarski/dev/ual-authenticator-walkthrough/example/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/adamzientarski/dev/ual-authenticator-walkthrough/example/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/adamzientarski/dev/ual-authenticator-walkthrough/example/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _wrapNativeSuper = require(\"/Users/adamzientarski/dev/ual-authenticator-walkthrough/example/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Types of errors that the UALError class can represent\n */\n\nvar UALErrorType;\n\n(function (UALErrorType) {\n  UALErrorType[\"UAL\"] = \"UAL\";\n  UALErrorType[\"Login\"] = \"Login\";\n  UALErrorType[\"Logout\"] = \"Logout\";\n  UALErrorType[\"Signing\"] = \"Signing\";\n  UALErrorType[\"Validation\"] = \"Validation\";\n  UALErrorType[\"Initialization\"] = \"Initialization\";\n  UALErrorType[\"DataRequest\"] = \"DataRequest\";\n  UALErrorType[\"Unsupported\"] = \"Unsupported\";\n})(UALErrorType = exports.UALErrorType || (exports.UALErrorType = {}));\n/**\n * Base error class for UAL errors.\n */\n\n\nvar UALError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(UALError, _Error);\n\n  /**\n   * @param message Message describing the error\n   *\n   * @param source The name of the authenticator that is the source of the error\n   *\n   * @param cause The underlying Error (if any) that resulted in the current one being thrown\n   */\n  function UALError(message, type, cause, source) {\n    var _this;\n\n    _classCallCheck(this, UALError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UALError).call(this, message));\n    _this.type = type;\n    _this.cause = cause;\n    _this.source = source;\n    return _this;\n  }\n\n  return UALError;\n}(_wrapNativeSuper(Error));\n\nexports.UALError = UALError;","map":null,"metadata":{},"sourceType":"script"}